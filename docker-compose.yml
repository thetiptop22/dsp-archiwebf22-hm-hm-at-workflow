version: '3.3'
services:
  app:
    build: containers/ci-cd
    container_name: app
    environment:
      - SSH_AUTH_SOCK=/ssh-agent
    ports:
      - 3000:3000
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`dsp-archiwebf22-hm-hm-at.fr`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"
  mongo:
    image: mongo:4.0-xenial
    restart: always
    container_name: mongo
    hostname: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
      - mongo_configdb:/data/configdb
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9002:9000"
    environment:
      sonar.jdbc.url: jdbc:postgresql://db:5432/sonar
      sonar.jdbc.username: sonar
      sonar.jdbc.password: sonar
    depends_on:
      - db
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.entrypoints=web"
      - "traefik.http.routers.sonarqube.rule=Host(`sonarqube.dsp-archiwebf22-hm-hm-at.fr`)"
      - "traefik.http.middlewares.sonarqube-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sonarqube.middlewares=sonarqube-https-redirect"
      - "traefik.http.routers.sonarqube-secure.entrypoints=websecure"
      - "traefik.http.routers.sonarqube-secure.rule=Host(`sonarqube.dsp-archiwebf22-hm-hm-at.fr`)"
      - "traefik.http.routers.sonarqube-secure.tls=true"

  db:
    image: postgres:latest
    container_name: db_postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
  traefik:
    image: traefik:v2.0
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--log.LEVEL=DEBUG"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=thetiptop.project@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=Host(`traefik.dsp-archiwebf22-hm-hm-at.fr`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:{SHA}0DPiKuNIrrVmD8IUCuw1hQxNqZc="
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.dsp-archiwebf22-hm-hm-at.fr`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.service=api@internal"

    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  portainer:
    image: 'portainer/portainer-ce:latest'
    restart: always
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9443:9443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.portainer.rule=Host(`portainer.dsp-archiwebf22-hm-hm-at.fr`)"
      - "traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.portainer.middlewares=portainer-https-redirect"
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.dsp-archiwebf22-hm-hm-at.fr`)"
      - "traefik.http.routers.portainer-secure.tls=true"

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  postgresql:
  postgresql_data:
  mongo_data:
  mongo_configdb:
  portainer_data: {}

# Mettre traefik dans un réseau docker externe. 
# Les autres conteneurs qui doivent être accessibles seront déclarés dans le même réseau
networks:
  web: